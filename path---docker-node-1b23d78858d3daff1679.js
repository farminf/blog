webpackJsonp([0xdcf89b6b7cf6],{337:function(e,n){e.exports={data:{markdownRemark:{html:'<p>After implementation of my web app for Raspberry SenseHat with ReactJs, I decided to dockerize it so maybe later I run it on AWS ECS (Amazon EC2 Container Service).(Actually not this web app but other project that I have, should be run on AWS ECS)</p>\n<p>First I want to use Docker Hub to push my image and later I can pull from it wherever I want to (Apparently it is GitHub for docker images). Therefore, I created an account on Docker Hub and I created a repository named ‚Äúsensehat-react‚Äù. Later when I create my docker image I‚Äôll push it to this repository.\nLet‚Äôs see what I have:\nI have a Node web app which uses webpack as a loader and ‚Äúnpm to install my needed modules and I run it.\nThis is my exact <strong>package.json</strong>:</p>\n<pre><code class="language-json">{\n  "name": "sensehat-react",\n  "version": "1.0.0",\n  "description": "Dashboard for SenseHat",\n  "main": "index.js",\n  "scripts": {\n    "production": "webpack -p",\n    "start": "webpack-dev-server"\n  },\n  "repository": {\n    "type": "git",\n    "url": "https://github.com/farminf/sensehat-react.git"\n  },\n  "keywords": ["SenseHat", "reactjs", "bootstrap", "dashboard"],\n  "author": "IoTGuy &#x3C;iotdemos16@gmail.com> (https://iotdemos.wordpress.com)",\n  "license": "Apache-2.0",\n  "bugs": {\n    "url": "https://github.com/farminf/sensehat-react/issues"\n  },\n  "homepage": "https://github.com/farminf/sensehat-react#readme",\n  "dependencies": {\n    "axios": "^0.15.3",\n    "react": "^15.4.2",\n    "react-bootstrap": "^0.30.7",\n    "react-bootstrap-switch": "^15.5.0",\n    "react-d3-basic": "^1.6.11",\n    "react-d3-core": "^1.3.9",\n    "react-dom": "^15.4.2",\n    "react-fontawesome": "^1.5.0",\n    "react-icons": "^2.2.3",\n    "react-router": "^3.0.2",\n    "react-rt-chart": "^1.3.0"\n  },\n  "devDependencies": {\n    "babel": "^6.23.0",\n    "babel-core": "^6.23.1",\n    "babel-loader": "^6.3.2",\n    "babel-preset-es2015": "^6.24.0",\n    "babel-preset-react": "^6.23.0",\n    "file-loader": "^0.10.1",\n    "html-webpack-plugin": "^2.28.0",\n    "image-webpack-loader": "^3.3.0",\n    "install": "^0.8.7",\n    "npm": "^4.3.0",\n    "webpack": "^2.2.1",\n    "webpack-dev-server": "^2.4.1"\n  }\n}\n</code></pre>\n<p>I need to build my Dockerfile based on my settings:</p>\n<ul>\n<li>My node project folder doesn‚Äôt have node_module folder(because it is clean: just cloned from GitHub)</li>\n<li>I need to do ‚Äúnpm install‚Äù to download my libraries in node_module folder</li>\n<li>Then for Running I need to run ‚Äúnpm start‚Äù</li>\n<li>Unfortunately, I am behind the proxy so I should think about that too (Damn proxy which makes everything complicated)</li>\n</ul>\n<p>I have written my Dockerfile and put it in the root folder:</p>\n<pre><code class="language-bash">FROM node:6.10\n\nRUN mkdir /sensehat-react-app\nCOPY . /sensehat-react-app\nWORKDIR /sensehat-react-app\n\nRUN npm config set proxy http://proxy-ip:proxy-port\nRUN npm config set https-proxy http://proxy-ip:proxy-port\n#If there is some dependency that uses not npm proxy but system one\n#you need to export the proxy here too\n\nRUN npm install\n\nEXPOSE 8080\n\nCMD [ "npm", "start" ]\n</code></pre>\n<p>Great, I have everythings ready to build my docker image and run it locally so I can be sure that it is working.\nAfter installation of Docker (<a href="https://docs.docker.com/engine/installation/linux/ubuntu/#docker-ee-customers">Ubuntu installation</a>) I go to terminal and my root folder.\nI build my docker image:</p>\n<pre><code class="language-bash">sudo docker build -t $docker_hub_username/$repository_name:$tag .\n</code></pre>\n<p>then I run it in the way that I can browse it on <a href="http://localhost:69160">http://localhost:69160</a></p>\n<pre><code class="language-bash">sudo docker run -d -p 49160:8080 $docker_hub_username/$repository_name:$tag\n</code></pre>\n<p>I test it and I browse to ‚Äò<a href="http://localhost:69160%E2%80%98">http://localhost:69160‚Äò</a> and surprisingly I get ‚ÄúConnection reset error‚Äù üò¶</p>\n<p>Then I remember that in my package.json file, in start script I haven‚Äôt indicate that Webpack web-server should be accessible from the network. I change the start script to:</p>\n<pre><code>webpack-dev-server --port 8080 --host 0.0.0.0\n</code></pre>\n<p>and save it‚Ä¶ but the thing is I update my local code and not my Docker container so I have 2 ways to do that, I can copy just this file to my docker using ‚Äòdocker cp‚Äô command or I can stop the current image, remove it and re-do the build part. I choose second one:</p>\n<pre><code class="language-bash">docker ps\n#to see my dockers running\ndocker stop $Container ID\ndocker images\n#See images id\nDocker rmi -f $Image ID\n</code></pre>\n<p>and re-do the build and run with new tag. Perfect now I can browse to my web app. I am happy üôÇ</p>\n<p>ok let‚Äôs put the docker on the Docker Hub using the properties of my Docker hub account then:</p>\n<pre><code class="language-bash">docker tag $image_id $userID/$RepositoryName:$tag\nsudo docker push $userID/$RepositoryName:$tag\n</code></pre>\n<p>first time I got the error: ‚Äòdenied: requested access to the resource is denied‚Äô but then I did</p>\n<pre><code class="language-bash">docker login\n#It asks you for username and password of Docker Hub\n</code></pre>\n<p>And again push, and It upload it on my Docker Hub üôÇ</p>\n<p>Perfect, so I have my web app image there and wherever which it has docker running I can run my app, I just need to pull it and run it, no need to setup anything or install anything.\nNext I try to run it on my AWS ECS service‚Ä¶</p>',frontmatter:{date:"May 09, 2017",path:"/docker-node",title:"Docker-izing a Node Web app (NPM/Webpack) "}}},pathContext:{}}}});
//# sourceMappingURL=path---docker-node-1b23d78858d3daff1679.js.map